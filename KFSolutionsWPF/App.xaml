<Application x:Class="KFSolutionsWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KFSolutionsWPF" xmlns:converters="clr-namespace:KFSolutionsWPF.Converters"
             StartupUri="MainWindow.xaml">
    <Application.Resources>



        <converters:BoolRadioConverter x:Key="BoolRadioConverter" />
        <converters:BoolRadioConverter x:Key="InverseBoolRadioConverter" Inverse="True" />







        <Style TargetType="TextBlock" x:Key="labelHoofdings">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF236323" Offset="0"/>
                        <GradientStop Color="#FF114211" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="22"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
        </Style>
        <!--====================================================================-->
        <Style TargetType="TextBlock" x:Key="labelData">
            <!--<Setter Property="Background" Value="Red"></Setter>-->
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Foreground" Value="#FFDAFFC5"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="TextAlignment" Value="Right"></Setter>
        </Style>

        <!--====================================================================-->
        <Style TargetType="ComboBox" x:Key="comboData">


            <Setter Property="Background" Value="red"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Foreground" Value="DarkBlue"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
        </Style>



        <Style TargetType="RadioButton" x:Key="radiobtnData">
            <Setter Property="Background" Value="#FFDAFFC5"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Height" Value="22"></Setter>
            <Setter Property="Foreground" Value="#FFDAFFC5"></Setter>
            <Setter Property="Margin" Value="5"></Setter>

        </Style>


        <Style TargetType="TextBox" x:Key="textboxData">
            <Setter Property="Background" Value="LightBlue"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Foreground" Value="DarkBlue"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
        </Style>

        <Style BasedOn="{StaticResource textboxData}" TargetType="TextBox" x:Key="infoTextboxData">
            <Setter Property="TextWrapping" Value="Wrap"></Setter>
            <Setter Property="AcceptsReturn" Value="True"></Setter>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"></Setter>
            <Setter Property="Height" Value="80"></Setter>
        </Style>




        <Style TargetType="{x:Type DatePicker}" x:Key="DateboxData">
            <Style.Resources>
                <Style TargetType="DatePickerTextBox">
                    <Setter Property="Background" Value="Transparent"/>
                </Style>
            </Style.Resources>
            <Setter Property="Background" Value="LightBlue"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Foreground" Value="DarkBlue"></Setter>
            <Setter Property="Margin" Value="5"></Setter>

        </Style>





        <!--<DataGrid.Resources>-->
            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0.536"/>
                            <GradientStop Color="#FF053209" Offset="1"/>
                            <GradientStop Color="#FF053E0A" Offset="0.063"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="White"></Setter>
            </Style>
        <!--</DataGrid.Resources>-->








        <!--https://stackoverflow.com/questions/3885007/wpf-image-command-binding-->

        <!--hoe gebruiken-->
        <!--Template="{StaticResource tplFlatButton}"-->

        <!--<ControlTemplate x:Key="tplFlatButton" TargetType="{x:Type Button}">
            <Border Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          TextElement.Foreground="{TemplateBinding Foreground}"
                          TextElement.FontFamily="{TemplateBinding FontFamily}"
                          TextElement.FontSize="{TemplateBinding FontSize}"
                          TextElement.FontStretch="{TemplateBinding FontStretch}"
                          TextElement.FontWeight="{TemplateBinding FontWeight}"/>
            </Border>
        </ControlTemplate>
        <Style x:Key="stlFlatButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template" Value="{StaticResource tplFlatButton}" />
        </Style>-->




        <Style TargetType="Button" x:Key="MyButton2">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Green" />
            <!--<Setter Property="Foreground" Value="MediumBlue" />-->

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="MyContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                    <!--<Setter Property="Foreground" Value="DeepPink"/>-->
                </Trigger>
            </Style.Triggers>
        </Style>








        <!--#region Custom scrollbar-->
        <!--https://sakethatwar.wordpress.com/2014/08/19/wpf-touch-friendly-scrollbar-style/-->
        <Style x:Key="ScrollBarPageButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb"
               TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="6"
                                Background="#FF426E36">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Opacity"
                                            Value="0.7" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="True">
                                            <Setter Property="Opacity"
                                                    Value="0.3" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Thumb}, Path=IsDragging}"
                                                     Value="True">
                                            <Setter Property="Opacity"
                                                    Value="0.3" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.00001*" />
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3"
                        CornerRadius="6"
                        Background="#FF002904"
                        Opacity="0.2" />
                <Track Name="PART_Track"
                       Grid.Row="1"
                       IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
                               Margin="1,0,1,0"
                               Background="Transparent" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="12" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="12" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3"
                        CornerRadius="2"
                        Background="#FF426E36" />
                <Track Name="PART_Track"
                       Grid.Column="1"
                       IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
                               Margin="0,1,0,1"
                               Background="Transparent" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}"
               TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
                         Value="Horizontal">
                    <Setter Property="Width"
                            Value="Auto" />
                    <Setter Property="Height"
                            Value="30" />
                    <Setter Property="Template"
                            Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation"
                         Value="Vertical">
                    <Setter Property="Width"
                            Value="18" />
                    <Setter Property="Height"
                            Value="Auto" />
                    <Setter Property="Margin"
                            Value="0,2,0,2" />
                    <Setter Property="Template"
                            Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CustomScrollViewer"
               TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" />
                            <ScrollBar Name="PART_VerticalScrollBar"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Grid.Column="1" />
                            <ScrollBar Name="PART_HorizontalScrollBar"
                                       Orientation="Horizontal"
                                       Grid.Column="0"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->















        <!--https://www.codeproject.com/Articles/32257/A-Style-for-Round-Glassy-WPF-Buttons-->
        <Style x:Key="GlassButton" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <!-- Background Layer -->
                            <Ellipse Fill="{TemplateBinding Background}"/>
                            <!-- Refraction Layer onderkant-->
                            <Ellipse x:Name="RefractionLayer">
                                <Ellipse.Fill>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000"/> <!--#00000000-->
                                        <GradientStop Offset="0.4" Color="#88888888"/> <!--#FFFFFFFF-->
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <!-- Reflection Layer -->
                            <Path x:Name="ReflectionLayer" VerticalAlignment="Top" Stretch="Fill">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleY="0.5" />
                                </Path.RenderTransform>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure IsClosed="True" StartPoint="98.999,45.499">
                                            <BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>
                                            <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="75.860,47.685"
                                    Point2="69.111,45.196"
                                    Point3="50.167,45.196"/>
                                            <BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>
                                            <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="7.469,52.580"
                                    Point2="1.000,53.252"
                                    Point3="1.000,44.999"/>
                                            <BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>
                                            <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="9.106,14.370"
                                    Point2="27.875,0"
                                    Point3="50,0"/>
                                            <BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>
                                            <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="99.139,39.369"
                                    Point2="98.999,40.084"
                                    Point3="98.999,45.499"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                                <Path.Fill>
                                    <RadialGradientBrush GradientOrigin="0.498,0.526">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform
                                       CenterX="0.5"
                                       CenterY="0.5"
                                       ScaleX="1"
                                       ScaleY="1.997"/>
                                                <TranslateTransform X="0" Y="0.5"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#FF888888"/> <!--#FFFFFFFF-->
                                        <GradientStop Offset="0.85" Color="#92888888"/> <!--#92FFFFFF-->
                                        <GradientStop Offset="0" Color="#00000000"/>
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                            <!-- ContentPresenter -->
                            <ContentPresenter Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>


                        </Grid>
                        <ControlTemplate.Triggers>

          

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="RefractionLayer" Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform
                                          CenterX="0.5"
                                          CenterY="0.5"
                                          ScaleX="1.5"
                                          ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="#00000000"/>
                                            <GradientStop Offset="0.45" Color="#FFFFFFFF"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ReflectionLayer" Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.498,0.526">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform
                                          CenterX="0.5"
                                          CenterY="0.5"
                                          ScaleX="1"
                                          ScaleY="1.997"/>
                                                    <TranslateTransform X="0" Y="0.5"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="#FFFFFFFF"/>
                                            <GradientStop Offset="0.85" Color="#BBFFFFFF"/>
                                            <GradientStop Offset="0" Color="#00000000"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="RefractionLayer" Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform
                                          CenterX="0.5"
                                          CenterY="0.5"
                                          ScaleX="1.5"
                                          ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="#00000000"/>
                                            <GradientStop Offset="0.3" Color="#FFFFFFFF"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ReflectionLayer" Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.498,0.526">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform
                                          CenterX="0.5"
                                          CenterY="0.5"
                                          ScaleX="1"
                                          ScaleY="1.997"/>
                                                    <TranslateTransform X="0" Y="0.5"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="#CCFFFFFF"/>
                                            <GradientStop Offset="0.85" Color="#66FFFFFF"/>
                                            <GradientStop Offset="0" Color="#00000000"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false" >
                                <Setter Property="Opacity" Value="0.25" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style BasedOn="{StaticResource GlassButton}" TargetType="Button" x:Key="RoundedNavButton">
            <Setter Property="Width" Value="50"></Setter>
            <Setter Property="Height" Value="50"></Setter>
            <Setter Property="Margin" Value="5,3"></Setter>
        </Style>
        <Style BasedOn="{StaticResource RoundedNavButton}" TargetType="Button" x:Key="GreenNavButton">
            <Setter Property="Background" Value="#FF15570F"></Setter>
        </Style>
        <Style BasedOn="{StaticResource RoundedNavButton}" TargetType="Button" x:Key="YellowNavButton">
            <Setter Property="Background" Value="#FF705F12"></Setter>
        </Style>
        <Style BasedOn="{StaticResource RoundedNavButton}" TargetType="Button" x:Key="BlueNavButton">
            <Setter Property="Background" Value="#FF0B215D"></Setter>
        </Style>



    </Application.Resources>
</Application>
